/* esm.sh - esbuild bundle(@rollup/plugin-babel@5.3.1) es2022 production */
var N=Object.defineProperty;var s=(e,t)=>N(e,"name",{value:t,configurable:!0});import*as a from"./@babel:core.js";import{createFilter as $}from"./@rollup:pluginutils.js";import{addNamed as D}from"./@babel:helper-module-imports.js";function A(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}s(A,"_defineProperty");function x(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter(function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable})),r.push.apply(r,n)}return r}s(x,"ownKeys");function c(e){for(var t=1;t<arguments.length;t++){var r=arguments[t]!=null?arguments[t]:{};t%2?x(Object(r),!0).forEach(function(n){A(e,n,r[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):x(Object(r)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))})}return e}s(c,"_objectSpread2");function B(e,t){if(e==null)return{};var r={},n=Object.keys(e),o,l;for(l=0;l<n.length;l++)o=n[l],!(t.indexOf(o)>=0)&&(r[o]=e[o]);return r}s(B,"_objectWithoutPropertiesLoose");function y(e,t){if(e==null)return{};var r=B(e,t),n,o;if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)n=l[o],!(t.indexOf(n)>=0)&&(!Object.prototype.propertyIsEnumerable.call(e,n)||(r[n]=e[n]))}return r}s(y,"_objectWithoutProperties");var w="bundled",k="inline",h="runtime",v="external",g="\0rollupPluginBabelHelpers.js";function M({types:e}){return{pre(t){let r={};t.set("helperGenerator",n=>t.availableHelper(n)?r[n]?e.cloneNode(r[n]):r[n]=D(t.path,n,g):null)}}}s(M,"importHelperPlugin");var R=s((e,t)=>c(c({},e),{},{plugins:e.plugins.concat(t)}),"addBabelPlugin"),H={};function U(e,t){H[t]||(H[t]=!0,e.warn(t))}s(U,"warnOnce");var W=/[\\^$.*+?()[\]{}|]/g,G=s(e=>e.replace(W,"\\$&"),"escapeRegExpCharacters");function X(e){let[t,r]=e.split("?"),n=`${r?`?${r}`:""}`;return{bareId:t,query:r,suffix:n}}s(X,"stripQuery");var q="Rollup requires that your Babel configuration keeps ES6 module syntax intact. Unfortunately it looks like your configuration specifies a module transformer to replace ES6 modules with another module format. To continue you have to disable it.\n\nMost commonly it's a CommonJS transform added by @babel/preset-env - in such case you should disable it by adding `modules: false` option to that preset (described in more detail here - https://github.com/rollup/plugins/tree/master/packages/babel#modules ).",K="An unexpected situation arose. Please raise an issue at https://github.com/rollup/plugins/issues. Thanks!",T="__ROLLUP__PREFLIGHT_CHECK_DO_NOT_TOUCH__",Y=`export default "${T}";`;function J(){return{visitor:{StringLiteral(e,t){e.node.value===T&&e.replaceWith(t.file.addHelper("inherits"))}}}}s(J,"helpersTestTransform");var O=s((e,t,r)=>`You have declared using "${t}" babelHelpers, but transforming ${r} resulted in "${e}". Please check your configuration.`,"mismatchError"),Q=/[\\/]+helpers[\\/]+(esm[\\/]+)?inherits/;async function V(e,t,r){let n=R(r,J),o=(await a.transformAsync(Y,n)).code;if(/export (d|{)/.test(o)||e.error(q),Q.test(o)){if(t===h)return;e.error(O(h,t,r.filename))}if(o.includes("babelHelpers.inherits")){if(t===v)return;e.error(O(v,t,r.filename))}if(o.includes("Super expression must either be null or a function")){if(t===k||t===w)return;t===h&&!r.plugins.length&&e.error(`You must use the \`@babel/plugin-transform-runtime\` plugin when \`babelHelpers\` is "${h}".
`),e.error(O(k,t,r.filename))}e.error(K)}s(V,"preflightCheck");async function j(e,t,r,n,o,l){let u=await(a.loadPartialConfigAsync||a.loadPartialConfig)(t);if(!u)return null;let p=r.config?await r.config.call(o,u,{code:e,customOptions:n}):u.options;if(l&&(p=await l(p)),!r.result){let{code:b,map:m}=await a.transformAsync(e,p);return{code:b,map:m}}let d=await a.transformAsync(e,p),{code:i,map:f}=await r.result.call(o,d,{code:e,customOptions:n,config:u,transformOptions:p});return{code:i,map:f}}s(j,"transformCode");var _=s((e={})=>{let{extensions:t=a.DEFAULT_EXTENSIONS,sourcemap:r=!0,sourcemaps:n=!0,sourceMap:o=!0,sourceMaps:l=!0}=e,u=y(e,["extensions","sourcemap","sourcemaps","sourceMap","sourceMaps"]);return c(c({extensions:t,plugins:[],sourceMaps:r&&n&&o&&l},u),{},{caller:c({name:"@rollup/plugin-babel"},u.caller)})},"unpackOptions"),I=s(({deprecatedOption:e,suggestion:t})=>{console.warn(`\`${e}\` has been removed in favor a \`babelHelpers\` option. Try changing your configuration to \`${t}\`. Refer to the documentation to learn more: https://github.com/rollup/plugins/tree/master/packages/babel#babelhelpers`)},"warnAboutDeprecatedHelpersOption"),Z=s((e,t)=>{let{skipPreflightCheck:r=!1}=e,n=y(e,["skipPreflightCheck"]);return"runtimeHelpers"in n?I({deprecatedOption:"runtimeHelpers",suggestion:"babelHelpers: 'runtime'"}):"externalHelpers"in n?I({deprecatedOption:"externalHelpers",suggestion:"babelHelpers: 'external'"}):n.babelHelpers||console.warn("babelHelpers: 'bundled' option was used by default. It is recommended to configure this option explicitly, read more here: https://github.com/rollup/plugins/tree/master/packages/babel#babelhelpers"),_(c(c({},n),{},{skipPreflightCheck:r,babelHelpers:n.babelHelpers||w,caller:c({supportsStaticESM:!0,supportsDynamicImport:!0,supportsTopLevelAwait:!0,supportsExportNamespaceFrom:!t.match(/^1\.2[0-5]\./)},n.caller)}))},"unpackInputPluginOptions"),z=s((e,{format:t})=>_(c(c({configFile:!1,sourceType:t==="es"?"module":"script"},e),{},{caller:c({supportsStaticESM:t==="es"},e.caller)})),"unpackOutputPluginOptions");function S(e={},t={}){if(!t.options)return{customOptions:null,pluginOptionsWithOverrides:e};let r=t.options(e);if(typeof r.then=="function")throw new Error(".options hook can't be asynchronous. It should return `{ customOptions, pluginsOptions }` synchronously.");return{customOptions:r.customOptions||null,pluginOptionsWithOverrides:r.pluginOptions||e}}s(S,"getOptionsWithOverrides");var F=s(()=>({}),"returnObject");function ee(e=F){let t=e(a);return r=>{let{customOptions:n,pluginOptionsWithOverrides:o}=S(r,t),l,u,p,d;return{name:"babel",options(){let i,f,b,m;var P=Z(o,this.meta.rollupVersion);({exclude:i,extensions:b,babelHelpers:l,include:f,filter:m,skipPreflightCheck:d}=P),u=y(P,["exclude","extensions","babelHelpers","include","filter","skipPreflightCheck"]);let C=new RegExp(`(${b.map(G).join("|")})$`);if(m&&(f||i))throw new Error("Could not handle include or exclude with custom filter together");let L=typeof m=="function"?m:$(f,i);return p=s(E=>C.test(X(E).bareId)&&L(E),"filter"),null},resolveId(i){return i!==g?null:i},load(i){return i!==g?null:a.buildExternalHelpers(null,"module")},transform(i,f){return!p(f)||f===g?null:j(i,c(c({},u),{},{filename:f}),t,n,this,async b=>(d||await V(this,l,b),l===w?R(b,M):b))}}}}s(ee,"createBabelInputPluginFactory");function te(e){switch(e){case"amd":return"amd";case"iife":case"umd":return"umd";case"system":return"systemjs";default:return"<module format>"}}s(te,"getRecommendedFormat");function re(e=F){let t=e(a);return r=>{let{customOptions:n,pluginOptionsWithOverrides:o}=S(r,t);return{name:"babel",renderStart(l){let{extensions:u,include:p,exclude:d,allowAllFormats:i}=o;(u||p||d)&&U(this,'The "include", "exclude" and "extensions" options are ignored when transforming the output.'),!i&&l.format!=="es"&&l.format!=="cjs"&&this.error(`Using Babel on the generated chunks is strongly discouraged for formats other than "esm" or "cjs" as it can easily break wrapper code and lead to accidentally created global variables. Instead, you should set "output.format" to "esm" and use Babel to transform to another format, e.g. by adding "presets: [['@babel/env', { modules: '${te(l.format)}' }]]" to your Babel options. If you still want to proceed, add "allowAllFormats: true" to your plugin options.`)},renderChunk(l,u,p){let d=z(o,p),i=y(d,["allowAllFormats","exclude","extensions","externalHelpers","externalHelpersWhitelist","include","runtimeHelpers"]);return j(l,i,t,n,this)}}}}s(re,"createBabelOutputPluginFactory");var le=ee(),ie=re();export{le as babel,ee as createBabelInputPluginFactory,re as createBabelOutputPluginFactory,le as default,le as getBabelInputPlugin,ie as getBabelOutputPlugin};